[gd_scene load_steps=14 format=3 uid="uid://ck1e81g2eq3jr"]

[ext_resource type="Texture2D" uid="uid://3mwwy204b4kv" path="res://assets/sprites/player/Player_idle.png" id="1_8afob"]
[ext_resource type="Texture2D" uid="uid://cgwdvl0qea4ju" path="res://assets/sprites/player/Player_run.png" id="1_dovo2"]
[ext_resource type="PackedScene" uid="uid://dwrnwfr2f8nuq" path="res://scenes/weapons/pistol/pistol.tscn" id="4_lvxji"]
[ext_resource type="Script" uid="uid://do86ghsyqpfyj" path="res://scenes/player/weapon_pivot.gd" id="4_p47bc"]
[ext_resource type="PackedScene" uid="uid://bu8o7sn2h0da3" path="res://scenes/weapons/rifle/rifle.tscn" id="5_0owmy"]
[ext_resource type="PackedScene" uid="uid://c1p0j52y2nvl7" path="res://scenes/weapons/pistol/pistol_reticle.tscn" id="6_75vfm"]
[ext_resource type="PackedScene" uid="uid://dlpole2sxs4u6" path="res://scenes/weapons/rifle/rifle_reticle.tscn" id="7_0owmy"]

[sub_resource type="GDScript" id="GDScript_0owmy"]
script/source = "extends CharacterBody2D

signal ammo_changed(current_mag, reserve)
signal health_changed(health, max_health)
signal weapon_changed(weapon_name)

const INVULNERABILITY_LENGTH := 2.0

@onready var animation_player: AnimationPlayer = $AnimationPlayer
@onready var invulnerable_timer: Timer = $InvulnerableTimer
@onready var player_sprite: Sprite2D = $PlayerSprite
@onready var reticle_container: Node2D = $ReticleContainer
@onready var weapon_slot: Node2D = $WeaponPivot

var can_take_damage := true
var current_weapons = []
var health := 5
var max_health := 5

# Weapons
var reserve_ammo := {
	\"pistol\": 90,
	\"rifle\": 90,
	\"rocket_launcher\": 0,
	\"shotgun\": 0,
}

const MOVE_SPEED := 120.0

func _ready() -> void:
	for weapon in weapon_slot.get_children():
		current_weapons.append(weapon)

	weapon_slot.current_weapon.become_active()
	
	for weapon in get_tree().get_nodes_in_group(\"weapons\"):
		weapon.connect(\"reload\", on_weapon_reload)
		weapon.connect(\"fired\", on_weapon_fired)
	# Debug, hide mouse. This will need to be adjusted in other menus/scripts.
	Input.mouse_mode = Input.MOUSE_MODE_HIDDEN

func _physics_process(_delta: float) -> void:
	process_movement()
	process_shooting()
	process_reloading()
	process_weapon_swap()
	animate_sprites()
	flip_sprites()
	move_and_slide()

func process_movement() -> void:
	var input_direction = Input.get_vector(\"left\", \"right\", \"up\", \"down\")
	velocity = input_direction * MOVE_SPEED

func process_shooting() -> void:
	if Input.is_action_pressed(\"shoot\") and weapon_slot.current_weapon:
		var reticle_location = reticle_container.get_child(0).global_position
		weapon_slot.current_weapon.shoot(reticle_location)

func process_reloading() -> void:
	if Input.is_action_just_pressed(\"reload\"):
		weapon_slot.current_weapon.start_reload()

func process_weapon_swap() -> void:
	if Input.is_action_just_pressed(\"swap\") and current_weapons.size() > 1:
		swap_weapon()

func swap_weapon():
	weapon_slot.current_weapon.become_inactive()
	
	if weapon_slot.current_weapon == current_weapons[0]:
		weapon_slot.current_weapon = current_weapons[1]
	else:
		weapon_slot.current_weapon = current_weapons[0]
	
	weapon_slot.current_weapon.become_active()
	
	var swap_reserve_ammo = reserve_ammo[weapon_slot.current_weapon.weapon_name]
	var swap_current_ammo = weapon_slot.current_weapon.current_ammo
	emit_signal(\"ammo_changed\", swap_current_ammo, swap_reserve_ammo)
	emit_signal(\"weapon_changed\", weapon_slot.current_weapon.weapon_name)

func animate_sprites() -> void:
	if velocity == Vector2.ZERO:
		animation_player.play(\"idle\")
	elif velocity != Vector2.ZERO:
		animation_player.play(\"run\")

func flip_sprites() -> void:
	if velocity.x < 0:
		player_sprite.flip_h = false
	elif velocity.x > 0:
		player_sprite.flip_h = true

func on_weapon_reload(weapon_name: String, amount_used: int) -> void:
	reserve_ammo[weapon_name] = max(reserve_ammo[weapon_name] - amount_used, 0)
	var ammo_in_weapon = weapon_slot.current_weapon.current_ammo
	emit_signal(\"ammo_changed\", ammo_in_weapon, reserve_ammo[weapon_name])

func on_weapon_fired(weapon_name: String, current_ammo: int):
	emit_signal(\"ammo_changed\", current_ammo, reserve_ammo[weapon_name])
	
func take_damage(damage) -> void:
	if !can_take_damage:
		return
	health = max(health - damage, 0)
	emit_signal(\"health_changed\", health, max_health)
	if health <= 0:
		death()
	enter_invulnerable_state()


func enter_invulnerable_state():
	can_take_damage = false
	modulate = Color(1, 1, 1, 0.5)
	invulnerable_timer.start(INVULNERABILITY_LENGTH)


func _on_invulnerable_timer_timeout() -> void:
	can_take_damage = true
	modulate = Color(1, 1, 1, 1)


func death() -> void:
	print(\"GAME OVER!\")
"

[sub_resource type="RectangleShape2D" id="RectangleShape2D_dovo2"]
size = Vector2(12, 26)

[sub_resource type="Animation" id="Animation_lvxji"]
length = 0.001
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("PlayerSprite:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [0]
}

[sub_resource type="Animation" id="Animation_gmlin"]
resource_name = "idle"
length = 0.48
loop_mode = 1
step = 0.08
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("PlayerSprite:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 0.08, 0.16, 0.24, 0.32, 0.4),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1),
"update": 1,
"values": [0, 1, 2, 3, 4, 5]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("PlayerSprite:hframes")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [6]
}
tracks/2/type = "value"
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/path = NodePath("PlayerSprite:texture")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [ExtResource("1_8afob")]
}

[sub_resource type="Animation" id="Animation_p47bc"]
resource_name = "run"
length = 0.64
loop_mode = 1
step = 0.08
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("PlayerSprite:texture")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [ExtResource("1_dovo2")]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("PlayerSprite:hframes")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [8]
}
tracks/2/type = "value"
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/path = NodePath("PlayerSprite:frame")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/keys = {
"times": PackedFloat32Array(0, 0.08, 0.16, 0.24, 0.32, 0.4, 0.48, 0.56),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1),
"update": 1,
"values": [0, 1, 2, 3, 4, 5, 6, 7]
}

[sub_resource type="AnimationLibrary" id="AnimationLibrary_p47bc"]
_data = {
&"RESET": SubResource("Animation_lvxji"),
&"idle": SubResource("Animation_gmlin"),
&"run": SubResource("Animation_p47bc")
}

[node name="Player" type="CharacterBody2D" groups=["player"]]
collision_mask = 26
platform_floor_layers = 4294967040
platform_wall_layers = 16
script = SubResource("GDScript_0owmy")

[node name="PlayerSprite" type="Sprite2D" parent="."]
position = Vector2(0, -16)
texture = ExtResource("1_dovo2")
hframes = 8

[node name="PlayerCollision" type="CollisionShape2D" parent="."]
position = Vector2(0, -13)
shape = SubResource("RectangleShape2D_dovo2")

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
libraries = {
&"": SubResource("AnimationLibrary_p47bc")
}

[node name="WeaponPivot" type="Node2D" parent="." node_paths=PackedStringArray("current_weapon")]
position = Vector2(0, -10)
script = ExtResource("4_p47bc")
current_weapon = NodePath("Pistol")

[node name="Pistol" parent="WeaponPivot" instance=ExtResource("4_lvxji")]

[node name="Rifle" parent="WeaponPivot" instance=ExtResource("5_0owmy")]

[node name="ReticleContainer" type="Node2D" parent="."]

[node name="PistolReticle" parent="ReticleContainer" instance=ExtResource("6_75vfm")]

[node name="RifleReticle" parent="ReticleContainer" instance=ExtResource("7_0owmy")]
visible = false

[node name="InvulnerableTimer" type="Timer" parent="."]
one_shot = true

[node name="Camera2D" type="Camera2D" parent="."]
zoom = Vector2(1.25, 1.25)
position_smoothing_enabled = true

[connection signal="timeout" from="InvulnerableTimer" to="." method="_on_invulnerable_timer_timeout"]
